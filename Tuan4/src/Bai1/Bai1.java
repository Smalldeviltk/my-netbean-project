/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Bai1;

import java.util.Calendar;
import java.util.Date;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author Small
 */
public class Bai1 extends javax.swing.JFrame {

    /**
     * Creates new form Bai1
     */
    public Bai1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbTime = new javax.swing.JLabel();
        lbReader = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Thời gian hiện tại:");

        lbTime.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lbTime.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbReader)
                .addGap(0, 397, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbTime)
                    .addComponent(lbReader))
                .addContainerGap(96, Short.MAX_VALUE))
        );

        lbReader.getAccessibleContext().setAccessibleName("lbReader");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bai1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Bai1().setVisible(true);
                getTime();
                Timer t = new Timer(1000, new XulyTimer());
                t.start();
            }
        });

    }

    public static void getTime() {
        Calendar now = Calendar.getInstance();
        int h = now.get(Calendar.HOUR_OF_DAY);
        int m = now.get(Calendar.MINUTE);
        int s = now.get(Calendar.SECOND);

        lbTime.setText(h + " : " + m + " : " + s);
        lbReader.setText(readNumbers(h) + " giờ, " + readNumbers(m) + " phút, " + readNumbers(s) + " giây.");
    }

    public static String readNumbers(int n) {
        String result = null;
        if (n < 10) {
            result = readNumber(n);
        } else if (n >= 20) {
            if (n % 10 == 0) {
                result = readNumber(n / 10) + " mươi";
            } else {
                result = readNumber(n / 10) + " mươi " + readNumber(n % 10);
            }
            if (n % 10 == 1) {
                result = readNumber(n / 10) + " mươi mốt";
            }
            if (n % 10 == 5) {
                result = readNumber(n / 10) + " mươi lăm";
            }
        } else {
            if (n == 10) {
                result = "mười";
            } else {
                result = "mười " + readNumber(n % 10);
            }
            if (n == 15) {
                result = "mười lăm";
            }
        }
        return result;
    }

    public static String readNumber(int n) {
        switch (n) {
            case 0:
                return "không";
            case 1:
                return "một";
            case 2:
                return "hai";
            case 3:
                return "ba";
            case 4:
                return "bốn";
            case 5:
                return "năm";
            case 6:
                return "sáu";
            case 7:
                return "bảy";
            case 8:
                return "tám";
            case 9:
                return "chín";
            default:
                return "";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel lbReader;
    public static javax.swing.JLabel lbTime;
    // End of variables declaration//GEN-END:variables

    public static class XulyTimer implements ActionListener {

        JFrame cmp;

        public XulyTimer() {
        }

        public XulyTimer(JFrame f) {
            cmp = f;
        }

        @Override
        public void actionPerformed(ActionEvent evt) {
//            if (evt.getSource() instanceof Timer) {
//                // Các hàm xuất và đọc các giá trị thời gian ...
//                getTime();
//            }
            getTime();
        }

    }

}
